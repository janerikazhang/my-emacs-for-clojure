;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(file-name-history read-envvar-name-history go-godoc-history extended-command-history ido-buffer-history minibuffer-history helm-M-x-input-history ido-file-history))
(setq file-name-history '("~/.emacs.d/init.el" "~/Documents/sandbox/workspace/go/src/go-helloworld/example.go" "/Users/Rika/.emacs.d/init.el" "/Users/Rika/Documents/sandbox/workspace/go/src/go-helloworld/example.go" "/Users/Rika/.emacs.d/init.el" "~/.emacs.d/" "~/Documents/sandbox/workspace/go/example.go" "~/Documents/sandbox/workspace/gocode/example.go" "~/Documents/sandbox/workspace/gocode/gocode.go" "~/.Trash/workspace/go/example.go" "~/.emacs.d/prelude-modules.el" "~/Documents/sandbox/workspace/Servers2/.project" "~/Documents/20131201张珣毕业论文-最终版.doc" "~/Downloads/AdobeFlashPlayer_18_a_install (4).dmg" "~/Downloads/UNIVERSITY OF GLASGOW.pdf" "~/Downloads/emacs-for-clojure-book1/init.el" "~/Documents/sandbox/workspace/clojure/Pascals-triangle.clj" "~/workspace/go/example.go" "~/Documents/.emacs.d copy.zip"))
(setq read-envvar-name-history '("GOPATH" "GOPATH" "PATH" "GOPATH" "PATH" "GOPATH"))
(setq go-godoc-history '("math/rand" "fmt" "time"))
(setq extended-command-history '("godoc" "shell" "load-theme" "package-list-packages" "package-menu-execute" "package-menu-mark-delete" "go-mode" "package-install" "getenv" "package-refresh-contents" "customize-variable" "package-initialize"))
(setq ido-buffer-history '("go-helloworld" ".emacs.d" "init.el" "gocode.go" "go" "example.go" "*Compile-Log*" "*gocode*<2>" "*gocode*" "*Messages*" "workspace" "*scratch*" "*Help*" "*Warnings*" "clojure" "UNIVERSITY OF GLASGOW.pdf" "init.el" "AdobeFlashPlayer_18_a_install (4).dmg" "Pascals-triangle.clj" ".emacs.d/init.el" "20131201张珣毕业论文-最终版.doc" "sandbox" "sandbox/workspace" ".project" "*Packages*" "*Warnings*"))
(setq minibuffer-history '("package" "/Users/Rika/.em" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Users/Rika/Docu" "/Users/Rika/.ema" "go " "ex " "go " "/Users/Rika/Docu" "/Users/Rika/.ema" "" "/Users/Rika/Docu" "/Users/Rika/.emacs.d/in" "shell" "go" "shell" "go" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Users/Rika/.em" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Users/Rika/Documents/sandbox/workspace/go/src/go-helloworld/ex" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Users/Rika/Docu" "/Users/Rika/.em" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Users/Rika/Docu" "/Users/Rika/.em" "/Users/Rika/Do" "/Users/Rika/.ema" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Users/Rika/Docu" "ac-sli" "/Users/Rika/Docu" "/Users/Rika/.ema" "go-" "/Users/Rika/Doc" "/Users/Rika/Docu" "/Users/Rika/.emac" "/Users/Rika/Docu" "/Users/Rika/Documents/sandbox/workspace/gocode/" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Us" "/Users/Rika/Docu" "/Users/Rika/.em" "/Users/Rika/Docu" "/Users/Rika/DOCU" "/Users/Rika/Docu" "/Users/Rika/.ema" "/Users/Rika/Documents/sandbox/workspace/go/" "/Users/Rika/Docu" "/Users/Rika/.EMA" "/Users/Rika/Docu" "/Users/Rika/Do" "/Users/Rika/.Trash/workspace/go/" "/Users/Rika/Do" "/Users/Rika/.em" "/Users/Rika/Do" "/Users/Rika/.ema" "/Users/Rika/Do" "/Users/Rika/.ema" "/Users/Rika/Do" "/Users/Rika/.ema" "/Users/Rika/do" "/Users/Rika/" "/Users/Rika/Do" "go-au" "auto-com" "and" "cursor" "/Users/Rika/Do" "/Users/Rika/.ema" "/Users/Rika/Documents/sandbox/workspace/go/ex" "/Users/Rika/Documents/sandbox/workspace/go/example.go" "/Users/Rika/Do" "/Users/Rika/Documents/sandbox/workspace/go/example" "/Users/Rika/DO" "/Users/Rika/Documents/sandbox/workspace/go/go-example.go" "/Users/Rika/Documents/san" "/Users/Rika/Docu" "/Users/Rika/workspace/go/example.go" "/Users/Rika/wor" "" "/Users/Rika/.emac" "/Users/Rika/.ema" "" "/Users/Rika/.ema" "solar"))
(setq helm-M-x-input-history '("godoc" "shell" "loa" "load-theme" "shell" "package-insta" "package-menu-ex" "package-me" "packa" "package-install" "packa" "go" "cider" "package" "packa" "p" "package-ins" "package-in" "pack" "packa" "package-in" "p" "package-ins" "go" "godoc" #("Println" 0 7 (face font-lock-function-name-face fontified t)) "getenv" #("Println" 0 7 (fontified t face font-lock-function-name-face)) "getenv " "package-" "godoc" "package-list" "pa" "package" "pa" "pack" "godoc" "package" "package-install" "Apply" "customize-v" "evil-mode" "evil-mo" "evil-pas" "evil-pa" "go" "go-mo" "package-list-pa" "loa" "load-theme" "load-t" "packa" "pac" "package-install" "package-ini" "package-install" "load-theme" "load-the" "load-theme" "package-re" "package-refresh-contents" "package-install" "rain" "helm-configuration" "helm-find-files" "helm-mode" "helm*" "helm-mode" "package-re" "package-refresh-contents" "clojure-mode"))
(setq ido-file-history '("init.el" "example.go" "init.el"))
(setq search-ring '("company-go" "cider" "cide" "cider" "go-auto" "popup" "exe" "exec-s" "go-compl" "go-co" "exec-" "go" "go-mo"))
(setq regexp-search-ring '("go/go-example.go" "go/example"))
